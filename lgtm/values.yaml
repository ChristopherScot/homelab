---
grafana:
  # -- Deploy Grafana if enabled. See [upstream readme](https://github.com/grafana/helm-charts/tree/main/charts/grafana#configuration) for full values reference.
  enabled: true

  # -- Grafana data sources config. Connects to all three by default
  datasources:
    datasources.yaml:
      apiVersion: 1
      # -- Datasources linked to the Grafana instance. Override if you disable any components.
      datasources:
      # https://grafana.com/docs/grafana/latest/datasources/loki/#provision-the-loki-data-source
      - name: Loki
        uid: loki
        type: loki
        url: http://{{ .Release.Name }}-loki-gateway
        isDefault: false
      # https://grafana.com/docs/grafana/latest/datasources/prometheus/#provision-the-data-source
      - name: Mimir
        uid: prom
        type: prometheus
        url: http://{{ .Release.Name }}-mimir-nginx/prometheus
        isDefault: true
      # https://grafana.com/docs/grafana/latest/datasources/tempo/configure-tempo-data-source/#provision-the-data-source
      - name: Tempo
        uid: tempo
        type: tempo
        url: http://{{ .Release.Name }}-tempo-query-frontend:3100
        isDefault: false
        jsonData:
          tracesToLogsV2:
            datasourceUid: loki
          lokiSearch:
            datasourceUid: loki
          tracesToMetrics:
            datasourceUid: prom
          serviceMap:
            datasourceUid: prom

loki:
  test:
    enabled: false
  # -- Deploy Loki if enabled. See [upstream readme](https://github.com/grafana/helm-charts/tree/main/charts/loki-distributed#values) for full values reference.
  enabled: true
  commonConfig:
    replication_factor: 1
  pattern_ingester:
    enabled: true
  injester:
    chunk_encoding: snappy
  limits_config:
    allow_structured_metadata: true
    volume_enabled: true
    retention_period: 672h # 28 days retention
  compactor:
    retention_enabled: true
    delete_request_store: filesystem
  ruler:
    enable_api: true
  minio:
    enabled: false
  monitoring:
    selfMonitoring:
      enabled: false
  persistence:
    enabled: true
    storageClassName: longhorn
    accessModes:
    - ReadWriteOnce
    size: 50Gi
  storage:
  type: filesystem
  filesystem:
    directory: /data/loki
  schemaConfig:
    configs:
    - from: "2024-04-01"
      store: tsdb
      object_store: filesystem
      schema: v13
      index:
        prefix: loki_index_
        period: 24h
  deploymentMode: SingleBinary
  singleBinary:
    replicas: 1

# -- Mimir chart values. Resources are set to a minimum by default.
mimir:
  # -- Deploy Mimir if enabled. See [upstream values.yaml](https://github.com/grafana/mimir/blob/main/operations/helm/charts/mimir-distributed/values.yaml) for full values reference.
  enabled: false
  alertmanager:
    resources:
      requests:
        cpu: 20m
  compactor:
    resources:
      requests:
        cpu: 20m
  distributor:
    resources:
      requests:
        cpu: 20m
  ingester:
    replicas: 2
    zoneAwareReplication:
      enabled: false
    resources:
      requests:
        cpu: 20m
  overrides_exporter:
    resources:
      requests:
        cpu: 20m
  querier:
    replicas: 1
    resources:
      requests:
        cpu: 20m
  query_frontend:
    resources:
      requests:
        cpu: 20m
  query_scheduler:
    replicas: 1
    resources:
      requests:
        cpu: 20m
  ruler:
    resources:
      requests:
        cpu: 20m
  store_gateway:
    zoneAwareReplication:
      enabled: false
    resources:
      requests:
        cpu: 20m
  rollout_operator:
    resources:
      requests:
        cpu: 20m

tempo:
  # -- Deploy Tempo if enabled.  See [upstream readme](https://github.com/grafana/helm-charts/blob/main/charts/tempo-distributed/README.md#values) for full values reference.
  enabled: true
  ingester:
    replicas: 1

grafana-oncall:
  # -- Deploy Grafana OnCall if enabled. See [upstream values.yaml](https://github.com/grafana/oncall/blob/dev/helm/oncall/values.yaml) for full values reference.
  enabled: false

alloy:
  configMap:
    content: |-
      // Write your Alloy config here:
      logging {
        level = "info"
        format = "logfmt"
      }

minio:
  enabled: false

backend:
  replicas: 0
read:
  replicas: 0
write:
  replicas: 0

ingester:
  replicas: 0
querier:
  replicas: 0
queryFrontend:
  replicas: 0
queryScheduler:
  replicas: 0
distributor:
  replicas: 0
compactor:
  replicas: 0
indexGateway:
  replicas: 0
bloomCompactor:
  replicas: 0
bloomGateway:
  replicas: 0
